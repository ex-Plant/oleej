function k(){}const M=t=>t;function w(t,n){for(const e in n)t[e]=n[e];return t}function j(t){return t()}function A(){return Object.create(null)}function v(t){t.forEach(j)}function B(t){return typeof t=="function"}function D(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function F(t){return Object.keys(t).length===0}function y(t,...n){if(t==null){for(const o of n)o(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t){let n;return y(t,e=>n=e)(),n}function S(t,n,e){t.$$.on_destroy.push(y(n,e))}function U(t,n,e,o){if(t){const r=m(t,n,e,o);return t[0](r)}}function m(t,n,e,o){return t[1]&&o?w(e.ctx.slice(),t[1](o(n))):e.ctx}function C(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const a=[],f=Math.max(n.dirty.length,r.length);for(let u=0;u<f;u+=1)a[u]=n.dirty[u]|r[u];return a}return n.dirty|r}return n.dirty}function G(t,n,e,o,r,a){if(r){const f=m(n,e,o,a);t.p(f,r)}}function H(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function I(t){const n={};for(const e in t)e[0]!=="$"&&(n[e]=t[e]);return n}let i;function _(t){i=t}function p(){if(!i)throw new Error("Function called outside component initialization");return i}function J(t){p().$$.on_mount.push(t)}function K(t){p().$$.after_update.push(t)}function L(t){p().$$.on_destroy.push(t)}const l=[],g=[];let s=[];const b=[],x=Promise.resolve();let h=!1;function E(){h||(h=!0,x.then(q))}function N(){return E(),x}function O(t){s.push(t)}const d=new Set;let c=0;function q(){if(c!==0)return;const t=i;do{try{for(;c<l.length;){const n=l[c];c++,_(n),z(n.$$)}}catch(n){throw l.length=0,c=0,n}for(_(null),l.length=0,c=0;g.length;)g.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];d.has(e)||(d.add(e),e())}s.length=0}while(l.length);for(;b.length;)b.pop()();h=!1,d.clear(),_(t)}function z(t){if(t.fragment!==null){t.update(),v(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function Q(t){const n=[],e=[];s.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),s=n}export{l as A,E as B,K as a,g as b,S as c,U as d,H as e,C as f,P as g,O as h,M as i,L as j,w as k,I as l,B as m,k as n,J as o,A as p,q,v as r,D as s,N as t,G as u,F as v,Q as w,i as x,_ as y,j as z};
